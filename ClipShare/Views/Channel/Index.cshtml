@model ClipShare.ViewModels.Channel.ChannelAddEdit_vm

@{
    // Ensure validation scripts are rendered
    Layout = "_Layout";
}

<style>
    .sortBy {
        cursor: pointer;
    }
</style>

@if (string.IsNullOrEmpty(Model.Name) || Model.Errors.Count > 0)
{
    <p>You don't have any channels yet. Use the form below to create your channel.</p>

    <form asp-action="CreateChannel" method="post">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="About" class="form-label"></label>
                <textarea asp-for="About" rows="4" class="form-control"></textarea>
                <span asp-validation-for="About" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <button class="btn btn-success" type="submit">
                    Create
                </button>
            </div>
        </div>
    </form>
}
else
{
    <ul class="nav nav-tabs">
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#myVideos">My Videos</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#analytics">Analytics</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#profile">Profile</a></li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade" id="myVideos">
            <div class="d-flex justify-content-between mt-3">
                <a class="btn btn-primary" asp-controller="Video" asp-action="CreateEditVideo">Create Video</a>

                <h4 class="text-danger">Subscriber: 2343</h4>
            </div>

            <div class="card border-primary mt-3 table-responsive-md">
                <table class="table mt-3">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Video</th>
                            <th class="sortBy" data-value="title">
                                <span>Title</span>
                                <span id="titleSortBy"></span>
                            </th>
                            <th class="sortBy" data-value="date">
                                <span>Date</span>
                                <span id="dateSortBy"></span>
                            </th>
                            <th class="sortBy" data-value="views">
                                <span>Views</span>
                                <span id="viewsSortBy"></span>
                            </th>
                            <th class="sortBy" data-value="comments">
                                <span>Comments</span>
                                <span id="commentsSortBy"></span>
                            </th>
                            <th class="sortBy" data-value="likes">
                                <span>Likes</span>
                                <span id="likesSortBy"></span>
                            </th>
                            <th class="sortBy" data-value="disLikes">
                                <span>DisLikes</span>
                                <span id="dislikesSortBy"></span>
                            </th>
                            <th class="sortBy" data-value="category">
                                <span>Category</span>
                                <span id="categorySortBy"></span>
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>

                    <tbody id="videosTableBody">
                    </tbody>
                </table>

                <div class="d-flex justify-content-end me-3 mb-2">
                    <ul class="navbar-nav me-3">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" id="itemsPerPageDropdown" role="button" aria-expanded="false">Rows Per Page: </a>

                            <div class="dropdown-menu">
                                <button type="button" class="dropdown-item pageSizeBtn" data-value="5">5</button>
                                <button type="button" class="dropdown-item pageSizeBtn" data-value="10">10</button>
                                <button type="button" class="dropdown-item pageSizeBtn" data-value="20">20</button>
                                <button type="button" class="dropdown-item pageSizeBtn" data-value="50">50</button>
                                <button type="button" class="dropdown-item pageSizeBtn" data-value="100">100</button>
                            </div>
                        </li>
                    </ul>

                    <ul class="navbar-nav me-3">
                        <li class="nav-item">
                            <span class="nav-link" id="itemsPerPageDisplay"></span>
                        </li>
                    </ul>
                    <ul class="navbar-nav me-3">
                        <li class="nav-item">
                            <span class="nav-link" id="paginationSummary">1-5 of 5</span>
                        </li>
                    </ul>

                    <div id="paginationBtnGroup" class="btn-group">
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="analytics">
            <div class="mt-3">
                Analytics
            </div>
        </div>
        <div class="tab-pane fade" id="profile">
            <div class="mt-3">
                <form asp-action="EditChannel" method="post">
                    <div class="row">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input id="profile_name" asp-for="Name" type="text" class="form-control" disabled />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="About" class="form-label"></label>
                            <textarea id="profile_about" asp-for="About" class="form-control" disabled></textarea>
                            <span asp-validation-for="About" class="text-danger"></span>
                        </div>

                        <div class="row" id="divEditButton">
                            <div class="col">
                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-outline-secondary" onclick="editProfile()">Edit</button>
                                </div>
                            </div>
                        </div>

                        <div class="row" id="updateProfileButtons" style="display: none;">
                            <div class="offset-3 col-6">
                                <div class="row">
                                    <div class="col d-grid">
                                        <button class="btn btn-success" type="submit">Update</button>
                                    </div>
                                    <div class="col d-grid">
                                        <button class="btn btn-danger" type="button" onclick="cancelEdit()">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let pageNumber = 1;
        let pageSize = 5;
        let sortBy = '';

        // Global utility functions
        function confirmation(message) {
            return new Promise((resolve) => {
                if (confirm(message)) {
                    resolve(true);
                } else {
                    resolve(false);
                }
            });
        }

        function displayNotification(isSuccess, title, message, type) {
            // Simple alert for now - can be replaced with a proper notification system
            if (isSuccess) {
                alert(`${title}: ${message}`);
            } else {
                alert(`Error - ${title}: ${message}`);
            }
        }

        $(function(){
            $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function(e){
                var currentTabId = $(e.target).attr('href');
                localStorage.setItem('activeTab', currentTabId);
            });

            var activeTab = localStorage.getItem('activeTab');

            if(activeTab){
                $('a[href="' + activeTab + '"]').tab('show');
            }
            else{
                $('a[href="#myVideos"]').tab('show'); // Fixed case mismatch
            }

            getMyVideos();
        });

        function getMyVideos(){
            const parameters = {
                pageNumber,
                pageSize,
                sortBy
            }

            $.ajax({
                url: "/Video/GetVideosForChannelGrid",
                type: "GET",
                data: parameters,
                success: function(data){
                    const result = data.result;

                    $('#videosTableBody').empty();
                    $('#paginationSummary').empty();
                    $('#paginationBtnGroup').empty();
                    $('#itemsPerPageDisplay').empty();

                    populateVideoTableBody(result.items);

                    if(result.totalItemsCount > 0){
                        $('#itemsPerPageDisplay').text(pageSize);

                        const from = (result.pageNumber - 1) * result.pageSize + 1;
                        const to = result.pageNumber * result.pageSize > result.totalItemsCount ? result.totalItemsCount : result.pageNumber * result.pageSize;

                        $('#paginationSummary').text(`${from}-${to} of ${result.totalItemsCount}`);

                        // First Page Button
                        let firstPageBtn = `
                            <button type="button" class="btn btn-secondary btn-sm paginationBtn" ${result.pageNumber==1?"disabled":''}
                                data-value="1" data-bs-toggle="tooltip" data-bs-placement="top" title="First Page">
                                <i class="bi bi-chevron-bar-left"></i>
                            </button>
                        `;
                        $('#paginationBtnGroup').append(firstPageBtn);

                        // Previous Page Button
                        let previousPageBtn = `
                            <button class="btn btn-sm btn-secondary paginationBtn" ${result.pageNumber == 1 ? "disabled" : ''}
                                data-value="${result.pageNumber - 1}" data-bs-toggle="tooltip" data-bs-placement="top" title="Previous Page">
                                <i class="bi bi-chevron-left"></i>
                            </button>
                        `;
                        $('#paginationBtnGroup').append(previousPageBtn);

                        // Next Page Button
                        let nextPageBtn = `
                            <button class="btn btn-sm btn-secondary paginationBtn" ${result.pageNumber == result.totalPages ? "disabled" : ''}
                                data-value="${result.pageNumber + 1}" data-bs-toggle="tooltip" data-bs-placement="top" title="Next Page">
                                <i class="bi bi-chevron-right"></i>
                            </button>
                        `;
                        $('#paginationBtnGroup').append(nextPageBtn);

                        // Last Page Button
                        let lastPageBtn = `
                            <button type="button" class="btn btn-sm btn-secondary paginationBtn" ${result.pageNumber == result.totalPages ? 'disabled' : ''}
                                data-value="${result.totalPages}" data-bs-toggle="tooltip" data-bs-placement="top" title="Last Page">
                                <i class="bi bi-chevron-bar-right"></i>
                            </button>
                        `;
                        $('#paginationBtnGroup').append(lastPageBtn);

                        // On paginationBtn click event
                        $('.paginationBtn').click(function(){
                            pageNumber = $(this).data('value');
                            getMyVideos();


                           
                        });
                    }
                    else{
                        $('#itemsPerPageDropdown').hide();
                    }
                }
            });
        }

        // On dropdown "Rows per page" selection event
        $('.pageSizeBtn').click(function(){
            pageSize = $(this).data('value');
            getMyVideos();
        });

        // On each table header click event
        $('.sortBy').click(function(){
            const sortByValue = $(this).data('value');

            $sortBySpan = $('#' + sortByValue + 'SortBy');
            const $i = $sortBySpan.find('i');

            if($i.hasClass('bi-arrow-up-short')){
                $sortBySpan.empty();
                $sortBySpan.append(`<i class="bi bi-arrow-down-short"></i>`);
                sortBy = sortByValue + '-d';
            }
            else if($i.hasClass('bi-arrow-down-short')){
                $sortBySpan.empty();
                $sortBySpan.append(`<i class="bi bi-arrow-up-short"></i>`);
                sortBy = sortByValue+'-a';
            }
            else{
                $sortBySpan.empty();
                $sortBySpan.append(`<i class="bi bi-arrow-up-short"></i>`);
                sortBy = sortByValue + '-a';
            }

            // remove all other arrows
            removeAllOtherArrows(sortByValue);
            getMyVideos();
        });

         function removeAllOtherArrows(exception){
             if(exception=='title'){
                 $('#dateSortBy').empty();
                 $('#viewsSortBy').empty();
                 $('#commentsSortBy').empty();
                 $('#likesSortBy').empty();
                 $('#dislikesSortBy').empty();
                 $('#categorySortBy').empty();
             }
             else if(exception == 'date'){
                 $('#titleSortBy').empty();
                 $('#viewsSortBy').empty();
                 $('#commentsSortBy').empty();
                 $('#likesSortBy').empty();
                 $('#dislikesSortBy').empty();
                 $('#categorySortBy').empty();
             }
             else if(exception == 'views'){
                 $('#dateSortBy').empty();
                 $('#titleSortBy').empty();
                 $('#commentsSortBy').empty();
                 $('#likesSortBy').empty();
                 $('#dislikesSortBy').empty();
                 $('#categorySortBy').empty();
             }
             else if(exception == 'comments'){
                 $('#titleSortBy').empty();
                 $('#dateSortBy').empty();
                 $('#viewsSortBy').empty();
                 $('#likesSortBy').empty();
                 $('#dislikesSortBy').empty();
                 $('#categorySortBy').empty();
             }
             else if(exception == 'likes'){
                 $('#titleSortBy').empty();
                 $('#dateSortBy').empty();
                 $('#commentsSortBy').empty();
                 $('#viewsSortBy').empty();
                 $('#dislikesSortBy').empty();
                 $('#categorySortBy').empty();
             }
             else if(exception == 'disLikes'){
                 $('#titleSortBy').empty();
                 $('#dateSortBy').empty();
                 $('#commentsSortBy').empty();
                 $('#viewsSortBy').empty();
                 $('#likesSortBy').empty();
                 $('#categorySortBy').empty();
             }
             else if(exception == 'category'){
                 $('#titleSortBy').empty();
                 $('#dateSortBy').empty();
                 $('#commentsSortBy').empty();
                 $('#likesSortBy').empty();
                 $('#dislikesSortBy').empty();
                 $('#viewsSortBy').empty();
             }
         }

         function populateVideoTableBody(videos){
            let trTag = '';

            if(videos.length > 0){
                videos.map((v, index)=>{
                    trTag +=
                    `<tr>
                        <td>${index + 1}</td>
                        <td><img src="${v.thumbnailUrl}" class="card-img-top rounded preview-image" /></td>
                        <td><p>${v.title}</p></td>
                        <td>${new Date(v.createdAt).toLocaleDateString('en-US', {year:'numeric', month: 'long', day: 'numeric'})}</td>
                        <td>
                            <p>${v.views.toLocaleString()}</p>
                        </td>
                        <td>${v.comments.toLocaleString()}</td>
                        <td>${(v.likes || 0).toLocaleString()}</td>
                        <td>${v.dislikes.toLocaleString()}</td>
                        <td>${v.categoryName}</td>
                        <td>
                            <a href="/Video/CreateEditVideo/${v.id}" class="btn btn-warning text-white me-2"><i class="bi bi-pencil"></i></a>
                            <button class="btn btn-danger text-white me-2"
                                onclick="deleteVideo(${v.id}, '${v.title}')"><i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>`;
                })
            }
            else{
                trTag = '<tr><td colspan="10" class="text-center">You don\'t have any videos</td></tr>';
            }

            $('#videosTableBody').append(trTag);
        }

        function editProfile(){
            $('#updateProfileButtons').show();
            $('#profile_name').prop("disabled", false);
            $('#profile_about').prop("disabled", false);
            $('#divEditButton').hide();
        }

        function cancelEdit(){
            $('#divEditButton').show();
            $('#updateProfileButtons').hide();
            $('#profile_name').val('@Model.Name');
            $('#profile_about').val('@Model.About');

            $('#profile_name').prop("disabled", true);
            $('#profile_about').prop("disabled", true);

            // Clear validation errors
            $('#profile_name-error').empty();
            $('#profile_about-error').empty();
            $('#profile_name').removeClass('input-validation-error');
            $('#profile_about').removeClass('input-validation-error');
        }

        async function deleteVideo(id, name) {
            const result = await confirmation('Are you sure you want to remove ' + name + '?');
            if(result){
                $.ajax({
                    url: "/Video/DeleteVideo/" + id,
                    type: "DELETE",
                    success: function(data){
                        displayNotification(data.isSuccess, data.title, data.message, 'modal');
                        getMyVideos();
                    }
                });
            }
        }
    </script>
}